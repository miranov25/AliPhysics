diff --git a/PWGPP/TPC/macros/tpcMCValidation.C b/PWGPP/TPC/macros/tpcMCValidation.C
index 43c1ad3..57771fa 100755
--- a/PWGPP/TPC/macros/tpcMCValidation.C
+++ b/PWGPP/TPC/macros/tpcMCValidation.C
@@ -5,7 +5,7 @@
 ///
 /*!
 \code
-   gSystem->AddIncludePath("-I$ALICE_ROOT/include/"); //couldn't add include path in .rootr
+  gSystem->AddIncludePath("-I$ALICE_ROOT/include/"); //couldn't add include path in .rootr
   .L $AliPhysics_SRC/PWGPP/TPC/macros/tpcMCValidation.C+
   TString mcPeriod="LHC15k1a1";
   TString mcPass="passMC";
@@ -18,6 +18,7 @@
 //  InitTPCMCValidation("LHC16g1c","passMC","LHC15o", "pass1",0,0);   // long period example
   //
   MakeReport();
+ 
   MakeStatusPlots();
   trendingDraw->fReport->Close();
   //
@@ -68,7 +69,7 @@ void MakeReport();
 void MakeStatusPlots();
 void tpcMCValidation(const char *mcPeriod = "LHC15k1a1", const char *soutputDir = "./");
 void makeHtmlDCA();
-void AddAppendBandDefault(const char *figureName,const char *refVariable, const char *bandNamePrefix, const char *selection);
+void AddAppendBandDefault(const char *figureName,const char *refVariable, const char *bandNamePrefix, const char *selection, const char* groupName);
 
 /// Print to the output string object names fulfilling criteria sRegExp
 /// \param array            - input TCollection
@@ -399,12 +400,12 @@ void MakeReport() {
   trendingDraw->MakePlot(outputDir, "meanTPCncl.png", "Number of clusters", cRange, "",
                          "QA.TPC.meanTPCncl;TPC.Anchor.meanTPCncl:run", "defaultCut", "figTemplateTRDPair",
                          "figTemplateTRDPair", 1, 1.0, 5, kTRUE);
-  AddAppendBandDefault("meanTPCncl.png","QA.TPC.meanTPCncl", "absDiff.QA.TPC.meanTPCncl", "defaultCut");
+  AddAppendBandDefault("meanTPCncl.png","QA.TPC.meanTPCncl", "absDiff.QA.TPC.meanTPCncl", "defaultCut","");
   
   trendingDraw->MakePlot(outputDir, "meanTPCnclFindable.png", "Cluster fraction #left(#frac{N_{cl}}{N_{find.}}#right)",
                          cRange, "", "QA.TPC.meanTPCnclF;TPC.Anchor.meanTPCnclF:run", "defaultCut",
                          "figTemplateTRDPair", "figTemplateTRDPair", 1, 1.0, 5, kTRUE);
-  AddAppendBandDefault("meanTPCnclFindable.png","QA.TPC.meanTPCnclF", "absDiff.QA.TPC.meanTPCnclF", "defaultCut");
+  AddAppendBandDefault("meanTPCnclFindable.png","QA.TPC.meanTPCnclF", "absDiff.QA.TPC.meanTPCnclF", "defaultCut","");
     
   trendingDraw->MakePlot(outputDir, "meanTPCNclRatioMCtoAnchor.png", "Number of clusters MC/Anchor", cRange, "",
                          "meanTPCncl/TPC.Anchor.meanTPCncl;meanTPCnclF/TPC.Anchor.meanTPCnclF:run", "defaultCut",
@@ -522,12 +523,12 @@ void MakeReport() {
   trendingDraw->MakePlot(outputDir, "meanMIP.png", "<Mean dEdx_{MIP}> (a.u) ", cRange, "",
                          "QA.TPC.meanMIP;TPC.Anchor.meanMIP:run:fitMIP.fElements[4];TPC.Anchor.fitMIP.fElements[4]", "defaultCut", "figTemplateTRDPair",
                          "figTemplateTRDPair", 1, 1.0, 6, kTRUE);
-  AddAppendBandDefault("meanMIP.png","QA.TPC.meanMIP", "absDiff.QA.TPC.meanMIP", "defaultCut");
+  AddAppendBandDefault("meanMIP.png","QA.TPC.meanMIP", "absDiff.QA.TPC.meanMIP", "defaultCut","");
   
   trendingDraw->MakePlot(outputDir, "meanElectron.png", "<dEdx_{el}> (a.u) ", cRange, "",
                          "QA.TPC.meanMIPele;TPC.Anchor.meanMIPele:run:fitElectron.fElements[4];TPC.Anchor.fitElectron.fElements[4]", "defaultCut", "figTemplateTRDPair",
                          "figTemplateTRDPair", 1, 1.0, 6, kTRUE);
-  AddAppendBandDefault("meanElectron.png","QA.TPC.meanMIPele", "absDiff.QA.TPC.meanMIPele", "defaultCut");
+  AddAppendBandDefault("meanElectron.png","QA.TPC.meanMIPele", "absDiff.QA.TPC.meanMIPele", "defaultCut","");
     
   trendingDraw->MakePlot(outputDir, "electronMIPSeparation.png", "<dEdx_{el}>-<dEdx_{MIP}>", cRange, "",
                          "QA.TPC.electroMIPSeparation;TPC.Anchor.electroMIPSeparation:run", "defaultCut",
@@ -604,28 +605,36 @@ void MakeReport() {
 //  trendingDraw->AppendBand(outputDir,"meanMIP.png","QA.TPC.meanMIP+absDiff.QA.TPC.meanMIP__WarningBand;QA.TPC.meanMIP-absDiff.QA.TPC.meanMIP__WarningBand:run", "defaultCut", "figTemplateTRDPair",
 //                         "figTemplateTRDPair", kTRUE, 1.0, kTRUE);
 
-void AddAppendBandDefault(const char *figureName,const char * refVariable,const char * bandNamePrefix, const char * selection /*other drawing variable  TString style*/ ){
-  TMultiGraph *mgraph=0;
+void AddAppendBandDefault(const char *figureName,const char * refVariable,const char * bandNamePrefix, const char * selection, const char* groupName /*other drawing variable  TString style*/ ){
+  TMultiGraph *mGraph=0;
+  
+  AliDrawStyle::SetCssStyle("testStyle",AliDrawStyle::ReadCSSFile("$AliRoot_SRC/STAT/test/alirootTestStyle.css",0));//remove
+  
   const char* aType[3]={"_WarningBand","_OutlierBand","_PhysAccBand"}; //yellow 400 ,red 632 ,green 416/    
   TString expr;
-  AliDrawStyle::SetCssStyle("testStyle",AliDrawStyle::ReadCSSFile("$AliRoot_SRC/STAT/test/alirootTestStyle.css",0));
   for(Int_t itype=0; itype<3; itype++){
     expr = refVariable+TString("+")+bandNamePrefix+TString(aType[itype])+TString(";")+refVariable+TString("-")+bandNamePrefix+TString(aType[itype])+TString(":run"); 
-    mgraph = TStatToolkit::MakeMultGraph(treeMC,"",expr,selection, "figTemplateTRDPair", "figTemplateTRDPair",kTRUE,0,6,0,kTRUE);
+    mGraph = TStatToolkit::MakeMultGraph(treeMC,"",expr,selection, "figTemplateTRDPair", "figTemplateTRDPair",kTRUE,0,6,0,kTRUE);
   
-  if(!mgraph){
+  if(!mGraph){
     ::Error("MakePlot","No plot returned -> dummy plot!");
     }
   else {
-    if (kTRUE) TStatToolkit::RebinSparseMultiGraph(mgraph,(TGraph*)trendingDraw->fStatusGraphM->GetListOfGraphs()->At(0));
+    if (kTRUE) TStatToolkit::RebinSparseMultiGraph(mGraph,(TGraph*)trendingDraw->fStatusGraphM->GetListOfGraphs()->At(0));
     
-    for(Int_t it=0; it<mgraph->GetListOfGraphs()->GetSize(); it++){
-      TGraph* band = (TGraph*) mgraph->GetListOfGraphs()->At(it);
-      band->SetName(TString::Format("graph[%d].class(deadBand)",itype).Data());
-      AliDrawStyle::TGraphApplyStyle("testStyle",band);
+    for(Int_t it=0; it<mGraph->GetListOfGraphs()->GetSize(); it++){
+      TGraph* band = (TGraph*) mGraph->GetListOfGraphs()->At(it);
+      
+      if (groupName!=""){    // example  groupName=".class(multiGraphPair).{marker_style:25,21,22,23;marker_color:1,2,4,5;}"
+        band->SetName(TString::Format("graph[%d].%s",itype,groupName).Data());
+      }else {
+        band->SetName(TString::Format("graph[%d].class(deadBand)", itype).Data());
+      }
+	  // TODO add group name if exist
+      AliDrawStyle::TGraphApplyStyle("testStyle",band); //"testStyle" to be changed to fCurrenCSSStyle
     }
     
-    TStatToolkit::DrawMultiGraph(mgraph,"l");
+    TStatToolkit::DrawMultiGraph(mGraph,"l");
     }
   }            
   if(outputDir!=0){
